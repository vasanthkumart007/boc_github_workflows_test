name: "Promote Images"
description: "Promote Images to the target environment"
inputs:
  platform:
    description: "Platform"
    required: true
  source_env:
    description: "Source Environment"
    required: true
  target_env:
    description: "Target Environment"
    required: true
  components:
    description: "Components"
    required: true
  tags:
    description: "Components Tags"
    required: true
  app_version:
    description: current promotion process version
    required: true
  bucket_name:
    description: Metadata Bucket name
    required: true
  metadata_path:
    description: Metadata Path
    required: true
  source_aws_registry:
    description: Source AWS registry
    required: true
  target_aws_registry:
    description: Source AWS registry
    required: true
  source_aws_repo_prefix:
    description: Repo prefix for source AWS Repo
    required: true
  target_aws_repo_prefix:
    description: Repo prefix for target AWS Repo
    required: true
runs:
  using: composite
  steps:
    - name: promote-images
      shell: bash
      run: |
        for b2b_platform in ${!platforms[@]}
        do
          targetbuildfile=${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt
          sourcebuildfile="${platforms[${b2b_platform}]}-${{ inputs.source_env }}-${{ inputs.app_version }}-deploy-builds.txt"
          rm -f $targetbuildfile
          rm -f $sourcebuildfile 
          sleep 5
        done
        echo " "
        echo " "
        echo "INFO: --------------------------------------INSIDE PROMOTE ACTION----------------------------------"
        echo " "
        echo " "
        if [[ "${{ inputs.platform }}" = "all" ]]
        then
          platforms=(aws azure)
        else
          platforms=(${{ inputs.platform }})
        fi
        echo "platform: ${platforms}"
        components=($(echo ${{ inputs.components }} | sed -e 's\,\ \g'))
        if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
        then
          tags=($(echo ${{ inputs.tags }} | sed -e 's\,\ \g'))
        else
          tags=()
        fi
        
        if [[ "${{ inputs.source_env }}" = "dev" || "${{ inputs.source_env }}" = "spro" ]]
        then
          echo "Promoting with input tags"
          for b2b_platform in ${!platforms[@]}
          do
            promotion_file="${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt"
            sourcebuildfile="${platforms[${b2b_platform}]}-${{ inputs.source_env }}-${{ inputs.app_version }}-deploy-builds.txt"
            targetenv_filepresent=$(aws s3 ls s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$promotion_file || true)
            sourceenv_filepresent=$(aws s3 ls s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$sourcebuildfile || true)
            if [[ "sourceenv_filepresent" == "" ]]
            then
              echo "ERR: No deployments done in source env Cannot promote stable builds"
              exit 1
            fi
            aws s3 cp s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$sourcebuildfile $sourcebuildfile

            if [[ "$targetenv_filepresent" == "" ]]
            then
              echo "INFO: Target environment build file not present"
              touch "./${promotion_file}"
            else
              echo "INFO: Target environment build file present"
              aws s3 cp s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$promotion_file $promotion_file
            fi
            for b2b_component in ${!components[@]}
            do
              tag_present=`sed -n "/^${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/p" $sourcebuildfile || true`
              if [[ "$tag_present" = "" ]]
              then
                echo "ERR: ${components[$b2b_component]}: ${tags[${b2b_component}]} Image not deployed in previous env"
                exit 1
              fi
            done
            # for b2b_component in ${!components[@]}
            # do
            #     shaID=$(aws ecr describe-images --repository-name=${{ inputs.source_aws_repo_prefix }}/${components[${b2b_component}]} --image-ids imageTag=${tags[${b2b_component}]}  | jq '.imageDetails[0].imageDigest' -r)
            #     echo " $shaID "
            #     tag_present=`sed -n "/^${components[${b2b_component}]}:.*/p" $promotion_file || true`
            #     if [[ "$tag_present" = "" ]]
            #     then
            #       echo "tag for ${components[${b2b_component}]} not present in target file. Add it"
            #       echo "${components[${b2b_component}]}: ${tags[${b2b_component}]}" >> $promotion_file
            #     else
            #       echo "tag for ${components[${b2b_component}]} present in target file. Changing it"
            #       sed -i "s/${components[${b2b_component}]}:.*/${components[${b2b_component}]}: ${tags[${b2b_component}]}/g" $promotion_file
            #     fi
            # done
            echo "CHECK 1 DONE"
            #----------------------------------------------TAG IMAGES STABLE----------------------------------------------
            # for b2b_platform in ${!platforms[@]}
            #   do   
            #   if [[ ${platforms[${b2b_platform}]} == "aws" ]]
            #     then
            #       source_image_registry_prefix="${{ inputs.source_aws_registry }}/${{ inputs.source_aws_repo_prefix }}"
            #       target_image_registry_prefix="${{ inputs.source_aws_registry }}/${{ inputs.target_aws_repo_prefix }}"
            #   else
            #       echo "Please mention AWS platform"
            #   fi
            #   for b2b_component in ${!components[@]}
            #     do
            #       echo " "
            #       echo "-----------TAG IMAGES STABLE-----------"
            #       pull_image="${source_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}"
            #       push_image="${target_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}_stable"
            #       docker pull $pull_image
            #       docker tag $pull_image $push_image                 
            #       docker push $push_image
            #       docker rmi $pull_image
            #       docker rmi $push_image
            #       echo "-----------------DOCKER DONE-------------"
            #       echo " "
            #   done
            # done
            # #----------------------------------------------TAG IMAGES STABLE----------------------------------------------
            
            
          done
        else
          echo "Int,Stage is source env promoting stable builds to next env"
          for b2b_platform in ${!platforms[@]}
          do
            sourcebuildfile="${platforms[${b2b_platform}]}-${{ inputs.source_env }}-${{ inputs.app_version }}-deploy-builds.txt"
            sourceenv_filepresent=$(aws s3 ls s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$sourcebuildfile || true)
            if [[ "sourceenv_filepresent" == "" ]]
            then
              echo "ERR: No deployments done in source env Cannot promote stable builds"
              exit 1
            fi
            aws s3 cp s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$sourcebuildfile $sourcebuildfile 
            promotion_file="${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt"
            targetenv_filepresent=$(aws s3 ls s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$promotion_file || true)
            if [[ "$targetenv_filepresent" = "" ]]
            then
              echo "INFO: Target env build file not present"
              touch "./${promotion_file}"
            else
              echo "INFO: Target env build file present"
              aws s3 cp s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$promotion_file $promotion_file
            fi
            for b2b_component in ${!components[@]}
            do
              tag_present=`sed -n "/^${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/p" $sourcebuildfile || true`
              if [[ "$tag_present" = "" ]]
              then
                echo "ERR: ${components[$b2b_component]}: ${tags[${b2b_component}]}. Image not deployed in previous env"
                exit 1
              fi
              component_name=$(sed -n "/^${components[${b2b_component}]}:.*/p" $sourcebuildfile | awk -F ':' '{print $1}' | tr -d [:space:])
              component_tag=$(sed -n "/^${components[${b2b_component}]}:.*/p" $sourcebuildfile | awk '{print $2}' | tr -d [:space:])
              tags[$b2b_component]=$component_tag
              # target_tag_present=`sed -n "/^${components[${b2b_component}]}: .*/p" $promotion_file || true`
              # if [[ "$target_tag_present" = "" ]]
              # then
              #   echo "Tag for ${components[${b2b_component}]} not present in target file. Add it"
              #   echo "${components[${b2b_component}]}: $component_tag" >> $promotion_file
              # else
              #   echo "Tag for ${components[${b2b_component}]} present in target file. Changing it"
              #   sed -i "s/${components[${b2b_component}]}:.*/${components[${b2b_component}]}: $component_tag/g" $promotion_file
              # fi
            done
          done
        fi
        # if [[ ("${{ inputs.target_env }}" = "int") || ("${{ inputs.source_env }}" = "dev") || ("${{ inputs.source_env }}" = "int") ]]
        # then
            #----------------------------------------------TAG IMAGES STABLE----------------------------------------------
            for b2b_platform in ${!platforms[@]}
              do
              
              if [[ ${platforms[${b2b_platform}]} == "aws" ]]
                then
                  source_image_registry_prefix="${{ inputs.source_aws_registry }}/${{ inputs.source_aws_repo_prefix }}"
                  echo $source_image_registry_prefix
                  target_image_registry_prefix="${{ inputs.source_aws_registry }}/${{ inputs.source_aws_repo_prefix }}"
                  echo $target_image_registry_prefix
              else
                  echo "Please mention AWS platform"
              fi
              for b2b_component in ${!components[@]}
                do
                  echo " "
                  echo "-----------TAG IMAGES STABLE-----------"
                  pull_image="${source_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}"
                  push_image="${target_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}_stable"
                  echo $pull_image
                  echo $push_image
                  docker pull $pull_image
                  docker tag $pull_image $push_image                 
                  docker push $push_image
                  docker rmi $pull_image
                  docker rmi $push_image
                  echo "-----------------DOCKER DONE-------------"
                  echo " "
              done
            done
            #----------------------------------------------TAG IMAGES STABLE----------------------------------------------
            
            
            #----------------------------------------------PUSH IMAGES----------------------------------------------------
            for b2b_platform in ${!platforms[@]}
              do
              
              if [[ ${platforms[${b2b_platform}]} == "aws" ]]
                then
                  source_image_registry_prefix="${{ inputs.source_aws_registry }}/${{ inputs.source_aws_repo_prefix }}"
                  target_image_registry_prefix="${{ inputs.target_aws_registry }}/${{ inputs.target_aws_repo_prefix }}"
                else
                  echo "Please mention AWS platform"
              fi
          
              for b2b_component in ${!components[@]}
              do
                promotion_file="${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt"
                echo " "
                echo "-------------------PUSH IMAGES-------------------"
                pull_image="${source_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}_stable"
                push_image="${target_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}"
                echo " pull image : $pull_image "
                echo " push image : $push_image " 
                docker pull $pull_image
                echo "------- FETCH SHAID -------"
                shaId=$(docker inspect --format='{{.RepoDigests}}' ${source_image_registry_prefix}/${components[${b2b_component}]}:${tags[${b2b_component}]}_stable | sed 's:^.\(.*\).$:\1:' | tr " " "\n" | grep -i "b2b/" | cut -d "@" -f 2)
                echo "------- SHAID: $shaId -------"
                docker tag $pull_image $push_image                 
                docker push $push_image
                docker rmi $pull_image
                docker rmi $push_image
                echo "-----------------DOCKER DONE-------------"
                echo " "
                tag_present=`sed -n "/^${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/p" $promotion_file || true`
                 if [[ "$tag_present" = "" ]]
                 then
                   echo "INFO: Tag for ${components[${b2b_component}]} not present in target file. Add it"
                   echo "${components[${b2b_component}]}: ${tags[${b2b_component}]}: $shaId" >> $promotion_file
                 else
                   echo "INFO: Tag for ${components[${b2b_component}]} present in target file. Changing it"
                   sed -i "s/${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/${components[${b2b_component}]}: ${tags[${b2b_component}]}: $shaId/g" $promotion_file
                 fi
              done
          done
          #----------------------------------------------PUSH IMAGES----------------------------------------------------
          
          
        #fi
        # echo " SHAID: $shaId "
        # promotion_file="${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt"

        #  for b2b_component in ${!components[@]}
        #      do
        #          echo " $shaId "
        #          tag_present=`sed -n "/^${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/p" $promotion_file || true`
        #          if [[ "$tag_present" = "" ]]
        #          then
        #            echo "INFO: Tag for ${components[${b2b_component}]} not present in target file. Add it"
        #            echo "${components[${b2b_component}]}: ${tags[${b2b_component}]}: $shaId" >> $promotion_file
        #          else
        #            echo "INFO: Tag for ${components[${b2b_component}]} present in target file. Changing it"
        #            sed -i "s/${components[${b2b_component}]}: ${tags[${b2b_component}]}.*/${components[${b2b_component}]}: ${tags[${b2b_component}]}: $shaId/g" $promotion_file
        #          fi
        #      done

        for b2b_platform in ${!platforms[@]}
        do
          targetbuildfile=${platforms[${b2b_platform}]}-${{ inputs.target_env }}-${{ inputs.app_version }}-promoted-builds.txt
          sourcebuildfile="${platforms[${b2b_platform}]}-${{ inputs.source_env }}-${{ inputs.app_version }}-deploy-builds.txt"
          aws s3 cp $targetbuildfile s3://${{ inputs.bucket_name }}/${{ inputs.metadata_path }}/$targetbuildfile
        done
